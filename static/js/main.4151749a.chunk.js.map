{"version":3,"sources":["components/elements/Contacts.module.css","components/Section.js","components/elements/ContactItem.js","components/elements/ContactsList.js","components/elements/ContactForm.js","components/elements/ContactFilter.js","App.js","index.js"],"names":["module","exports","Section","title","children","insertItem","name","number","Contactlist","contacts","map","id","contact","key","CreateContact","state","changeHandler","event","currentTarget","value","setState","submitHandler","e","preventDefault","uuidv4","props","onAddContact","reset","this","onSubmit","className","styles","contactForm","container","type","placeholder","onChange","inputs","disabled","length","contactAddButton","Component","Filter","target","App","filter","AddContact","propContact","item","toLowerCase","includes","trim","alert","changeFilter","filterContacts","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,YAAc,8BAA8B,iBAAmB,mCAAmC,OAAS,2B,kJCCtJ,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,6BACI,4BAAKD,GACL,6BAAMC,I,YCHH,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACvC,OACI,4BACI,2BACKD,EADL,IACYC,ICJT,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAClC,OACI,oCACI,4BACKA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,EAAV,6BACV,kBAAC,EAAD,eAAYC,IAAKF,GAAQC,S,mCCgE9BE,E,4MAlEXC,MAAQ,CAAET,KAAM,GAAIC,OAAQ,I,EAE5BS,cAAgB,SAAAC,GAAU,IAAD,EACGA,EAAMC,cAAtBZ,EADa,EACbA,KAAMa,EADO,EACPA,MAEd,EAAKC,SAAL,eAAiBd,EAAOa,K,EAG5BE,cAAgB,SAAAC,GACZA,EAAEC,iBADe,MAEQ,EAAKR,MAAtBT,EAFS,EAETA,KAAMC,EAFG,EAEHA,OACRK,EAAU,CACZD,GAAIa,cACJlB,KAAMA,EACNC,OAAQA,GAEZ,EAAKkB,MAAMC,aAAad,GACxB,EAAKe,S,EAGTA,MAAQ,WACJ,EAAKP,SAAS,CAAEd,KAAM,GAAIC,OAAQ,M,uDAG5B,IAAD,EACoBqB,KAAKb,MAAtBT,EADH,EACGA,KAAMC,EADT,EACSA,OACd,OACI,0BAAMsB,SAAUD,KAAKP,cAAeS,UAAWC,IAAOC,aAClD,2BAAOF,UAAWC,IAAOE,WACrB,sCACA,2BACIC,KAAK,OACL5B,KAAK,OACLa,MAAOb,EACP6B,YAAY,4BACZC,SAAUR,KAAKZ,cACfc,UAAWC,IAAOM,SAEtB,wCACA,2BACIH,KAAK,SACL5B,KAAK,SACLa,MAAOZ,EACP4B,YAAY,8BACZC,SAAUR,KAAKZ,cACfc,UAAWC,IAAOM,UAG1B,4BACIH,KAAK,SACLI,UAAWhC,EAAKiC,SAAWhC,EAAOgC,OAClCT,UAAWC,IAAOS,kBAHtB,oB,GAjDYC,aCFb,SAASC,EAAT,GAA+B,IAAbN,EAAY,EAAZA,SAC7B,OACI,2BAAON,UAAWC,IAAOE,WACrB,uDACA,2BACIH,UAAWC,IAAOM,OAClBH,KAAK,OACL5B,KAAK,SACL8B,SAAU,SAAAd,GAAC,OAAIc,EAASd,EAAEqB,OAAOxB,W,ICiDlCyB,E,4MApDX7B,MAAQ,CACJN,SAAU,I,EAEdM,MAAQ,CACJN,SAAU,CACN,CAAEE,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEI,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,cAElDsC,OAAQ,I,EAGZC,WAAa,SAAAC,GACT,IAAMC,EAAOD,EAAYzC,KACX,EAAKS,MAAMN,SAASC,KAAI,SAAAE,GAAO,OACzCA,EAAQN,KAAK2C,iBAGXC,SAASF,EAAKC,cAAcE,QAC5BC,MAAM,GAAD,OAAIJ,EAAJ,4BACL,EAAK5B,UAAS,SAAAL,GAAK,MAAK,CACpBN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsBsC,S,EAI5CM,aAAe,SAAAR,GACX,EAAKzB,SAAS,CAAEyB,Y,EAGpBS,eAAiB,WAAO,IAAD,EACU,EAAKvC,MAA1BN,EADW,EACXA,SAAUoC,EADC,EACDA,OAClB,OAAOpC,EAASoC,QAAO,SAAAjC,GAAO,OAC1BA,EAAQN,KAAK2C,cAAcC,SAASL,EAAOI,mB,uDAK/C,OACI,oCACI,kBAAC/C,EAAD,CAASC,MAAO,YAAa2B,UAAWC,IAAOE,WAC3C,kBAACsB,EAAD,CAAa7B,aAAcE,KAAKkB,cAEpC,kBAAC5C,EAAD,CAASC,MAAO,WAAY2B,UAAWC,IAAOE,WAC1C,kBAACS,EAAD,CAAQN,SAAUR,KAAKyB,eACvB,kBAAC,EAAD,CAAa5C,SAAUmB,KAAK0B,yB,GA9C9Bb,aCHlBe,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.4151749a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__3TiIv\",\"contactForm\":\"Contacts_contactForm__3NzJj\",\"contactAddButton\":\"Contacts_contactAddButton__1Rk8S\",\"inputs\":\"Contacts_inputs__1fNtR\"};","import React from 'react';\n\nexport default function Section({ title, children }) {\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>{children}</div>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function insertItem({ name, number }) {\n    return (\n        <li>\n            <p>\n                {name}:{number}\n            </p>\n        </li>\n    );\n}\n\ninsertItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport InsertItem from './ContactItem';\n\nexport default function Contactlist({ contacts }) {\n    return (\n        <>\n            <ul>\n                {contacts.map(({ id, ...contact }) => (\n                    <InsertItem key={id} {...contact} />\n                ))}\n            </ul>\n        </>\n    );\n}\n","import React, { Component } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass CreateContact extends Component {\n    state = { name: '', number: '' };\n\n    changeHandler = event => {\n        const { name, value } = event.currentTarget;\n\n        this.setState({ [name]: value });\n    };\n\n    submitHandler = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const contact = {\n            id: uuidv4(),\n            name: name,\n            number: number,\n        };\n        this.props.onAddContact(contact);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form onSubmit={this.submitHandler} className={styles.contactForm}>\n                <label className={styles.container}>\n                    <span>Name</span>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        placeholder=\"Please, enter the name...\"\n                        onChange={this.changeHandler}\n                        className={styles.inputs}\n                    />\n                    <span>Number</span>\n                    <input\n                        type=\"number\"\n                        name=\"number\"\n                        value={number}\n                        placeholder=\"Please, enter the number...\"\n                        onChange={this.changeHandler}\n                        className={styles.inputs}\n                    />\n                </label>\n                <button\n                    type=\"submit\"\n                    disabled={!name.length || !number.length}\n                    className={styles.contactAddButton}\n                >\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nCreateContact.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.number,\n    onAddContact: PropTypes.func.isRequired,\n};\n\nexport default CreateContact;\n","import React from 'react';\nimport styles from './Contacts.module.css';\n\nexport default function Filter({ onChange }) {\n    return (\n        <label className={styles.container}>\n            <span>Find contacts by name</span>\n            <input\n                className={styles.inputs}\n                type=\"text\"\n                name=\"filter\"\n                onChange={e => onChange(e.target.value)}\n            />\n        </label>\n    );\n}\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport ContactList from './components/elements/ContactsList';\nimport ContactForm from './components/elements/ContactForm';\nimport Filter from './components/elements/ContactFilter';\nimport styles from './components/elements/Contacts.module.css';\n\nclass App extends Component {\n    state = {\n        contacts: [],\n    };\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    AddContact = propContact => {\n        const item = propContact.name;\n        const items = this.state.contacts.map(contact =>\n            contact.name.toLowerCase(),\n        );\n\n        items.includes(item.toLowerCase().trim())\n            ? alert(`${item} is already in contacts`)\n            : this.setState(state => ({\n                  contacts: [...state.contacts, propContact],\n              }));\n    };\n\n    changeFilter = filter => {\n        this.setState({ filter });\n    };\n\n    filterContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <Section title={'Phonebook'} className={styles.container}>\n                    <ContactForm onAddContact={this.AddContact} />\n                </Section>\n                <Section title={'Contacts'} className={styles.container}>\n                    <Filter onChange={this.changeFilter} />\n                    <ContactList contacts={this.filterContacts()} />\n                </Section>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}