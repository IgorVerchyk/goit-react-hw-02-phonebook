{"version":3,"sources":["components/elements/Contacts.module.css","components/Section.js","components/elements/ContactItem.js","components/elements/ContactsList.js","components/elements/ContactForm.js","components/elements/ContactFilter.js","App.js","index.js"],"names":["module","exports","Section","title","children","ContactItem","name","number","onDelete","className","styles","listItem","type","onClick","deleteButton","ContactList","contacts","map","id","contact","key","ContactForm","state","changeHandler","event","currentTarget","value","setState","submitHandler","e","preventDefault","uuidv4","props","onAddContact","reset","this","onSubmit","contactForm","container","placeholder","onChange","inputs","disabled","length","contactAddButton","Component","Filter","target","propTupes","PropTypes","func","isRequired","App","filter","addContact","propContact","item","toLowerCase","includes","trim","alert","changeFilter","filterContacts","deleteContact","newContactsArr","savedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8433295b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__3TiIv\",\"contactForm\":\"Contacts_contactForm__3NzJj\",\"contactAddButton\":\"Contacts_contactAddButton__1Rk8S\",\"inputs\":\"Contacts_inputs__1fNtR\",\"listItem\":\"Contacts_listItem__CcR39\",\"deleteButton\":\"Contacts_deleteButton__15lSV\"};","import React from 'react';\n\nexport default function Section({ title, children }) {\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>{children}</div>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contacts.module.css';\n\nexport default function ContactItem({ name, number, onDelete }) {\n    return (\n        <li className={styles.listItem}>\n            <p>\n                {name}:{number}\n            </p>\n            <button\n                type=\"button\"\n                onClick={onDelete}\n                className={styles.deleteButton}\n            >\n                Delete\n            </button>\n        </li>\n    );\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ contacts, onDelete }) {\n    return (\n        <ul>\n            {contacts.map(({ id, ...contact }) => (\n                <ContactItem\n                    key={id}\n                    {...contact}\n                    onDelete={() => onDelete(id)}\n                />\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.exact({\n                id: PropTypes.string.isRequired,\n                name: PropTypes.string.isRequired,\n                number: PropTypes.string.isRequired,\n            }),\n        ),\n        PropTypes.array,\n    ]),\n    onDelete: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n    state = { name: '', number: '' };\n\n    changeHandler = event => {\n        const { name, value } = event.currentTarget;\n\n        this.setState({ [name]: value });\n    };\n\n    submitHandler = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const contact = {\n            id: uuidv4(),\n            name: name,\n            number: number,\n        };\n        this.props.onAddContact(contact);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form onSubmit={this.submitHandler} className={styles.contactForm}>\n                <label className={styles.container}>\n                    <span>Name</span>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        placeholder=\"Please, enter the name...\"\n                        onChange={this.changeHandler}\n                        className={styles.inputs}\n                    />\n                    <span>Number</span>\n                    <input\n                        type=\"number\"\n                        name=\"number\"\n                        value={number}\n                        placeholder=\"Please, enter the number...\"\n                        onChange={this.changeHandler}\n                        className={styles.inputs}\n                    />\n                </label>\n                <button\n                    type=\"submit\"\n                    disabled={!name.length || !number.length}\n                    className={styles.contactAddButton}\n                >\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.number,\n    onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './Contacts.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ onChange }) {\n    return (\n        <label className={styles.container}>\n            <span>Find contacts by name</span>\n            <input\n                className={styles.inputs}\n                type=\"text\"\n                name=\"filter\"\n                onChange={e => onChange(e.target.value)}\n            />\n        </label>\n    );\n}\n\nFilter.propTupes = {\n    onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport ContactList from './components/elements/ContactsList';\nimport ContactForm from './components/elements/ContactForm';\nimport Filter from './components/elements/ContactFilter';\nimport styles from './components/elements/Contacts.module.css';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    addContact = propContact => {\n        const item = propContact.name;\n        const items = this.state.contacts.map(contact =>\n            contact.name.toLowerCase(),\n        );\n        if (items.includes(item.toLowerCase().trim())) {\n            alert(`${item} is already in contacts`);\n        } else {\n            this.setState(state => ({\n                contacts: [...state.contacts, propContact],\n            }));\n        }\n    };\n\n    changeFilter = filter => {\n        this.setState({ filter });\n    };\n\n    filterContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    deleteContact = id => {\n        const { contacts } = this.state;\n        const newContactsArr = contacts.filter(contact => contact.id !== id);\n        this.setState({ contacts: newContactsArr });\n    };\n\n    componentDidMount() {\n        const savedContacts = localStorage.getItem('contacts');\n        if (savedContacts) {\n            this.setState({ contacts: JSON.parse(savedContacts) });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.contacts !== this.state.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Section title={'Phonebook'} className={styles.container}>\n                    <ContactForm onAddContact={this.addContact} />\n                </Section>\n                <Section title={'Contacts'} className={styles.container}>\n                    <Filter onChange={this.changeFilter} />\n                    <ContactList\n                        contacts={this.filterContacts()}\n                        onDelete={this.deleteContact}\n                    />\n                </Section>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}